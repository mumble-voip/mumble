name: Build

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
  workflow_dispatch:
    inputs:
      SIGN_WINDOWS_INSTALLER:
        description: 'Sign Windows Installer'
        required: true
        type: boolean
        default: false

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CMAKE_OPTIONS: -Dtests=ON -Dsymbols=ON -Ddisplay-install-paths=ON -Dtest-lto=OFF


jobs:
  skip_test:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: same_content_newer
          skip_after_successful_duplicate: 'true'

  fetch_build_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.fetch.outputs.build_number }}
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 1
      - id: fetch
        shell: bash
        run: |
          build_version="$("${{ github.workspace }}/scripts/mumble-version.py")"
          build_number="$("${{ github.workspace }}/scripts/mumble-build-number.py" \
            --commit "${{ github.sha }}" --version "${build_version}" \
            --password "${{ secrets.BUILD_NUMBER_TOKEN }}" --default 0)"
          echo "build_number=${build_number}" >> "$GITHUB_OUTPUT"


  build:
    needs: [ skip_test, fetch_build_number ]

    if: needs.skip_test.outputs.should_skip != 'true'

    strategy:
        fail-fast: false
        matrix:
            os: [ubuntu-22.04, ubuntu-24.04, windows-2022, macos-14]
            type: [static, shared]
            arch: [x86_64]
            exclude:
              - os: windows-2022
                type: shared
              - os: macos-14
                type: shared
              - os: ubuntu-22.04
                type: static
            
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
          submodules: 'recursive'
          fetch-depth: 1


      # The Bash version installed on macOS is ancient. We need a newer version
    - name: Install Bash
      if: startswith(matrix.os, 'macos')
      run: brew install bash

    - name: Set environment variables
      run: $GITHUB_WORKSPACE/.github/workflows/set_environment_variables.sh "${{ matrix.os }}" "${{ matrix.type }}" "${{ matrix.arch }}" "${{ github.workspace }}"
      shell: bash

    - uses: actions/cache@v4
      with:
          path: '${{ env.MUMBLE_ENVIRONMENT_DIR }}'
          key: ${{ env.MUMBLE_ENVIRONMENT_VERSION }}

    - uses: ./.github/actions/install-dependencies
      with:
          type: ${{ matrix.type }}
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}

    - name: Build
      run: ./.github/workflows/build.sh "${{ matrix.os }}" "${{ matrix.type }}" "${{ matrix.arch }}"
      shell: bash
      env:
          MUMBLE_BUILD_NUMBER: ${{ needs.fetch_build_number.outputs.build_number }}

    - name: Test
      working-directory: ${{ github.workspace }}/build
      shell: bash
      run: ctest --output-on-failure -C $BUILD_TYPE

    - if: ${{ inputs.SIGN_WINDOWS_INSTALLER == 'true' && startsWith(matrix.os, 'windows') }}
      uses: ./.github/actions/sign-binaries
      with:
          signpath-token: ${{ secrets.SIGNPATH_API_TOKEN }}
          build-number: ${{ needs.fetch_build_number.outputs.build_number }}
          type: ${{ matrix.type }}
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}

    - if: ${{ inputs.SIGN_WINDOWS_INSTALLER != 'true' && matrix.type == 'static' }}
      name: Publish
      uses: actions/upload-artifact@v4
      with:
        name: 'Mumble-${{ matrix.os }}'
        compression-level: 9
        path: |
          build/mumble
          build/mumble-server
          build/**/mumble*.msi
          build/**/mumble*.exe
